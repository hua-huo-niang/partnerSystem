<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.qiang.mapper.UserMapper">

    <sql id="userColums">
    id,username,userAccount,
    userPassword,avatarUrl,gender,
    phone,email,userStatus,createTime,updateTime,
    isDelete,userRole,planetCode,tags,profile,createTime</sql>

    <sql id="userDTOColums">
        id,username,userAccount,avatarUrl,gender,phone,email,userStatus,userRole,planetCode,tags,profile,createTime</sql>

    <!--Integer addOne(User user);-->
    <insert id="addOne" parameterType="user">
        insert into user (<include refid="userColums"/>)
        values (#{id},#{username},#{userAccount},#{userPassword},
                #{avatarUrl},#{gender},#{phone},#{email},#{userStatus},null,
                null,#{isDelete},#{userRole},#{planetCode}, #{tags},#{profile})
    </insert>

    <!--Integer addOnRegist(@Param("userAccount") String userAccount, @Param("userPassword") String userPassword);-->
    <insert id="addOnRegist">
        insert into user (id,userAccount,userPassword) values (null,#{userAccount},#{userPassword});
    </insert>

    <!--Integer updateOneUser(UserDTO data);-->
    <update id="updateOneUser" parameterType="userDTO">
        update user
        <set>
            <if test="data.username!=null">username = #{data.username},</if>
            <if test="data.avatarUrl!=null">username = #{data.avatarUrl},</if>
            <if test="data.gender!=null">username = #{data.gender},</if>
            <if test="data.phone!=null">username = #{data.phone},</if>
            <if test="data.email!=null">username = #{data.email},</if>
        </set>
        where id = #{data.id} and isDelete = 0;
    </update>

    <!--Integer deleteOne(@Param("id") Integer id);-->
    <delete id="deleteOne">
        update user set isDelete = 1  where id = #{id} and isDelete = 0;
    </delete>


    <!--User getOne(Integer id);-->
    <select id="getOne" resultType="userDTO">
        select <include refid="userDTOColums"/> from user where id = #{id} and isDelete = 0;
    </select>

    <!--Integer findOnRegist(@Param("userAccount") String userAccount);-->
    <select id="findOnRegist" resultType="java.lang.Integer">
        select count(*) from user where userAccount = #{userAccount} and isDelete = 0;
    </select>

    <!--Long getIdByUserAccount(@Param("userAccount") String userAccount);-->
    <select id="getIdByUserAccount" resultType="java.lang.Long">
        select id from user where userAccount = #{userAccount} and isDelete = 0;
    </select>

    <!--User getUserByAccount(@Param("userAccount") String userAccount);-->
    <select id="getUserByAccount" resultType="com.qiang.domain.entity.User">
        select <include refid="userColums"/> from user where userAccount = #{userAccount} and isDelete = 0;
    </select>

    <!--List<UserDTO> getUserByTagNameList(List<String> tagNameList);-->
    <select id="getUserByTagNameList" resultType="com.qiang.domain.DTO.UserDTO">
        select <include refid="userDTOColums"/>
            from user
            where isDelete = 0
        <if test="tagNameList !=null and tagNameList.size()>0">
            and
            <foreach collection="tagNameList" item="tagName" separator="and">
                tags like concat('%',#{tagName},'%')
            </foreach>
        </if>
    </select>

    <!--List<UserDTO> getAllUsers();-->
    <select id="getAllUsers" resultType="com.qiang.domain.DTO.UserDTO">
        select <include refid="userDTOColums"/> from user where isDelete = 0;
    </select>

    <!--List<UserDTO> getUserByAnyTagName();-->
    <select id="getUserByAnyTagName" resultType="com.qiang.domain.DTO.UserDTO">
        select <include refid="userDTOColums"/> from user where isDelete = 0
        <if test="tagNameList !=null and tagNameList.size()>0">
            and
            <foreach collection="tagNameList" item="tagName" separator="or">
                tags like concat('%',#{tagName},'%')
            </foreach>
        </if>
    </select>

    <!--List<UserDTO> getuserByAnyTagname_josn(List<String> tagNameList);-->
    <select id="getuserByAnyTagname_josn" resultType="com.qiang.domain.DTO.UserDTO">
        select <include refid="userDTOColums"/> from user
        where isDelete = 0
        <if test="tagNameList !=null and tagNameList.size()>0">
            and
            <foreach collection="tagNameList" item="tagName" separator="and">
                JSON_CONTAINS(tags,concat('"',#{tagName},'"'))
            </foreach>
        </if>
    </select>
</mapper>
